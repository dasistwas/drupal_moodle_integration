<?php
/**
 * 
 */
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Url;
use Drupal\menu_link_content\Entity\MenuLinkContent;

/**
 * Implements hook_theme().Set custom theme for modules
 */

function drupal_moodle_integration_theme($existing, $type, $theme, $path) {
  return [
    'moodle_course_list' => [
      'variables' => ['course_list' => [] , 'moodle_user_id' => ""],
      'template' => 'course_list',
    ],
    'moodle_course' => [
      'variables' => ['course' => [] , 'moodle_user_id' => ""],
      'template' => 'course',
    ],
    'moodle_course_activity' => [
      'variables' => ['course_activity' => []],
      'template' => 'course_activity',
    ],
  ];
}

/**
 * Implements hook_user_insert().Update existing users in moodle.
 */
function drupal_moodle_integration_install() {
  \Drupal::entityTypeManager()
    ->getStorage('entity_form_display')
    ->load('user.user.default')
    ->setComponent('field_moodle_user_id', [
      'label' => 'above',
      'settings' => ['link_to_entity' => 'false'],
    ])->save();
  $items = [
    'moodle/course/list' => 'Moodle Courses List',
    'moodle/course' => 'Moodle User Assigned Courses',
  ];
  foreach ($items as $nid => $title) {
    $menu_link = MenuLinkContent::create([
      'title' => $title,
      'link' => ['uri' => 'internal:/' . $nid],
      'menu_name' => 'main',
      'expanded' => TRUE,
    ]);
    $menu_link->save();
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function drupal_moodle_integration_form_user_login_form_alter(&$form, FormStateInterface $form_state) {
  $form['#submit'][] = 'drupal_moodle_integration_user_login_submit';
}

/**
 * After Login Redirect.
 */
function drupal_moodle_integration_user_login_submit(&$form, FormStateInterface $form_state) {
  $url = Url::fromRoute('drupal_moodle_integration_course.controller');
  $request = \Drupal::service('request_stack')->getCurrentRequest();
  if (!$request->request->has('destination')) {
    $form_state->setRedirectUrl($url);
  }
}

/**
 * Insert User in moodle.
 */
function drupal_moodle_integration_user_insert(Drupal\Core\Entity\EntityInterface $entity) {
  if ($entity->bundle() == 'user') {
    $users[] = [
      'username' => $entity->get('name')->getValue()[0]['value'] ,
      'password' => $_POST['pass']['pass1'],
      'firstname' => $entity->get('name')->getValue()[0]['value'],
      'lastname' => $entity->get('name')->getValue()[0]['value'],
      'email'    => $entity->get('mail')->getValue()[0]['value'],
    ];
    $service = \Drupal::service('drupal_moodle_integration.user_services');
    $moodle_id = $service->moodleCreateUser($users);
    $entity->set('field_moodle_user_id', $moodle_id);
    $entity->save();
  }
}

/**
 * Update User in moodle.
 */
function drupal_moodle_integration_user_update(Drupal\Core\Entity\EntityInterface $entity) {
  if ($entity->bundle() == 'user') {
    $users[] = [
      'id' => $entity->get('field_moodle_user_id')->getValue()[0]['value'] ,
      'username' => $entity->get('name')->getValue()[0]['value'] ,
      'firstname' => $entity->get('name')->getValue()[0]['value'],
      'lastname' => $entity->get('name')->getValue()[0]['value'],
      'email'    => $entity->get('mail')->getValue()[0]['value'],
    ];
    $service = \Drupal::service('drupal_moodle_integration.user_services');
    $moodle_id = $service->moodleUpdateUser($users);
  }
}
